---
// src/components/PlaceholderImage.astro
export interface Props {
  src?: string;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  fallbackText?: string;
}

const { 
  src, 
  alt, 
  width = 800, 
  height = 400, 
  class: className = "", 
  fallbackText = "Image Coming Soon" 
} = Astro.props;

// Create a placeholder SVG
const placeholderSvg = `data:image/svg+xml,${encodeURIComponent(`
  <svg width="${width}" height="${height}" xmlns="http://www.w3.org/2000/svg">
    <rect width="100%" height="100%" fill="#f3f4f6"/>
    <g transform="translate(${width/2}, ${height/2})">
      <rect x="-80" y="-40" width="160" height="80" fill="#d1d5db" rx="8"/>
      <text x="0" y="-10" text-anchor="middle" font-family="Arial, sans-serif" font-size="14" fill="#6b7280">
        üè¥‚Äç‚ò†Ô∏è ${fallbackText}
      </text>
      <text x="0" y="10" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#9ca3af">
        Treasure Image Loading...
      </text>
      <text x="0" y="30" text-anchor="middle" font-family="Arial, sans-serif" font-size="10" fill="#d1d5db">
        ${width} √ó ${height}
      </text>
    </g>
  </svg>
`)}`;
---

<!-- Try to load the actual image with fallback -->
<img 
  src={src || placeholderSvg}
  alt={alt}
  width={width}
  height={height}
  class={className}
  onerror={`this.src='${placeholderSvg}'`}
  loading="lazy"
  decoding="async"
/>