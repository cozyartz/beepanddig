---
import type { CollectionEntry } from 'astro:content';
import { motion } from 'framer-motion';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faTreasureChest } from '@fortawesome/pro-solid-svg-icons';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import { Image } from 'astro:assets';
const { IMAGE_DELIVERY_URL } = import.meta.env;

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;

// React Component: Animated Hero Image
const AnimatedHero = ({ src, alt }) => (
  <motion.div
    initial={{ opacity: 0, scale: 0.85 }}
    animate={{ opacity: 1, scale: 1 }}
    transition={{ duration: 1.2, ease: 'easeOut' }}
    className="hero-image"
    whileHover={{ scale: 1.02, rotate: 1 }}
  >
    {src ? (
      <img src={`${IMAGE_DELIVERY_URL}${src}/default`} alt={alt} className="w-full h-auto rounded-2xl shadow-xl" />
    ) : (
      <FontAwesomeIcon icon={faTreasureChest} size="4x" className="text-accent mx-auto animate-pulse" />
    )}
  </motion.div>
);
---

<html lang="en">
  <head>
    <BaseHead title={title} description={description} />
    <style>
      @import url('/styles/global.css');
    </style>
  </head>
  <body>
    <Header />
    <main class="max-w-6xl mx-auto px-6">
      <motion.article
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ duration: 0.7, ease: 'easeInOut' }}
      >
        <div class="hero-image">
          {heroImage && (
            <AnimatedHero
              src={heroImage.src}
              alt={`Hero image for ${title}`}
              client:load
            />
          )}
        </div>
        <motion.div
          className="prose"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.7, delay: 0.3, ease: 'easeInOut' }}
        >
          <div class="title">
            <div className="date text-gray-dark flex items-center gap-3">
              <FormattedDate date={pubDate} />
              {updatedDate && (
                <div className="last-updated-on italic">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )}
            </div>
            <h1 className="text-5xl text-heading font-extrabold mt-4">{title}</h1>
            <hr className="border-gray-light my-6" />
          </div>
          <slot />
        </motion.div>
      </motion.article>
    </main>
    <Footer />
  </body>
</html>